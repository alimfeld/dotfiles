# Use a better prefix
unbind C-b 
set -g prefix C-Space
bind C-Space send-prefix

set -g base-index 1                     # start numbering windows from one (default is zero)
set -sg escape-time 0                   # don't wait after escape is input
setw -g mode-keys vi                    # use vi key bindings in copy mode
setw -g mouse on                        # add mouse support (select & resize panes, copy text, change window)
set -as terminal-features ",xterm*:RGB" # True color support

bind v split-window -h
bind s split-window -v

bind Escape copy-mode
# Check default key bindings in copy-mode with vi key bindings by running: tmux list-keys -T copy-mode-vi
bind -T copy-mode-vi v send -X begin-selection                # also bound to Space; overrides rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel # defaults to Enter in vi mode

bind Tab display-popup -E "tmux-sessionizer"

# Navigate seamlessly between vim and tmux splits.
# Key bindings taken from vim-tmux-navigator (https://github.com/christoomey/vim-tmux-navigator) with wrapping disabled
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

# Styling
set -g pane-border-lines heavy  # better visibility of pane borders
set -g pane-border-style fg=black
set -g pane-active-border-style fg=white
set -g status-style bg=black,fg=white
set -g status-position top
set -g status-left-length 80 
set -g status-left "[#{=-77:session_name}] "
set -g status-right-length 19
set -g status-right "| %Y-%m-%d %H:%M "
set -g window-status-format " #I "
set -g window-status-current-format "#[bg=white,fg=black] #I "
